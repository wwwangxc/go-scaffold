[app]
machine_id = 1                  # 机器id

# HTTP服务相关配置信息
[app.http]
mode = "debug"                  # 运行模式
shutdown_ttl = "5s"             # 关机等待时长
secret = '盐'                   # 盐值
token_ttl = "15m"               # token有效时长（单位：分钟）
name = "http"                   # 服务名称

# grpc服务相关配置信息
[app.grpc]
network = "tcp"                 # 服务网络协议
scheme = "scaffold"             # 服务scheme
name = "ping"                   # 服务名称

# etcd注册机相关配置信息
[app.grpc.register.etcd]
endpoints = ["127.0.0.1:2379"]  # 注册机地址
dial_timeout = "5s"             # 拨号超时（单位：秒）
heartbeat_cycle = "5s"          # 心跳周期（单位：秒）
lease_ttl = "5s"                # 租约时长（单位：秒）

# mysql相关配置信息
[app.mysql.master]
dsn = "root:root@tcp(127.0.0.1:3306)/master?charset=utf8&parseTime=True&loc=Local"
max_idle_conns = 50         # 最大空闲连接数
max_open_conns = 100        # 最大活动连接数
conn_max_lifetime = "300s"  # 连接的最大存活时间

# mysql相关配置信息
[app.mysql.slave]
dsn = "root:root@tcp(127.0.0.1:3306)/slave?charset=utf8&parseTime=True&loc=Local"
max_idle_conns = 50         # 最大空闲连接数
max_open_conns = 100        # 最大活动连接数
conn_max_lifetime = "300s"  # 连接的最大存活时间

# redis相关配置信息
[app.redis.0]
addr = "127.0.0.1:6379"
password = ""
db = 0

# redis相关配置信息
[app.redis.1]
addr = "127.0.0.1:6379"
password = ""
db = 0

# log相关配置信息
[app.log]
dir = "."                       # 日志存放目录
name = "http.log"               # 日志名称
level = "info"                  # 日志级别
debug = true                    # 是否记录debug日志
max_size = 100                  # 日志文件大小（单位：MB）
max_age = 5                     # 备份时间（单位：天
max_backups = 7                 # 备份数量
compress = false                # 是否压缩日志

# etcd解释器相关配置信息
[grpc.resolver.etcd]
scheme = "scaffold"             # scheme
endpoints = ["127.0.0.1:2379"]  # 解释器地址
dial_timeout = "5s"             # 拨号超时（单位：秒）

# ping契约相关配置信息
[grpc.ping]
address = "scaffold:///ping"    # 兼容ping契约的grpc服务地址
balancer_name = "round_robin"   # 负载均衡算法
dial_timeout = "5s"             # 拨号超时（单位：秒）

# kafka 生产者相关配置信息
[app.kafka.topic01.producer]
version = "0.10.2.0"                                # kafka版本
topic = "topic01"                                   # 主题
brokers = ["127.0.0.1:9092", "127.0.0.1:9093"]      # kafka节点地址

# kafka 生产者相关配置信息
[app.kafka.topic02.producer]
version = "0.10.2.0"                                # kafka版本
topic = "topic02"                                   # 主题
brokers = ["127.0.0.1:9092", "127.0.0.1:9093"]      # kafka节点地址

# kafka 消费者组相关配置信息
[app.kafka.consumerGroup]
version = "0.10.2.0"                                # kafka版本
group_id = "groupID"                                # 消费者组ID
topics = ["topic01", "topic02"]                     # 主题
brokers = ["127.0.0.1:9092", "127.0.0.1:9093"]      # kafka节点地址
balancer_name = "roundrobin"                        # 负载均衡算法
consumer_num = 2                                    # 消费者组成员个数

# kafka 消费者相关配置信息
[app.kafka.topic01.consumer]
version = "0.10.2.0"                                # kafka版本
client_id = "clientID"                              # 消费者ID
topic = "topic01"                                   # 主题
partition = 0                                       # 分区
brokers = ["127.0.0.1:9092", "127.0.0.1:9093"]      # kafka节点地址
sasl_enable = false                                 # true：开启，false：关闭
sasl_username = "username"
sasl_password = "password"
tls_enable = false                                  # true：开启，false：关闭
tls_verify = false
tls_cert_file = "cert file"
tls_key_file = "key file"
tls_ca_file = "ca file"

[app.sqlite]
dsn = "./test.db"
